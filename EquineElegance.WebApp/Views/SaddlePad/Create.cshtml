@model EquineElegance.Entities.SaddlePad

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<p>@ViewBag.Feedback</p>

@using (Html.BeginForm("Create", "SaddlePad", FormMethod.Post, new { enctype = "multipart/form-data"})) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>SaddlePad</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", min = "0" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
	        @Html.LabelFor(model => model.AmountInStock, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.EditorFor(model => model.AmountInStock, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
		        @Html.ValidationMessageFor(model => model.AmountInStock, "", new { @class = "text-danger" })
	        </div>
        </div>
        
        @* manuele toevoeging van de property kleur (en eronder ook horseSize en saddlepadtype) zodat deze ook gekozen kunnen worden bij de create *@

        <div class="form-group">
	        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownListFor(model => model.Color,
			        new SelectList(Enum.GetValues(typeof(EquineElegance.Entities.Color))),
			        "Selecteer een Color", new { @class = "form-control" })
	        </div>
        </div>

        <div class="form-group">
	        @Html.LabelFor(model => model.HorseSize, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownListFor(model => model.HorseSize,
			        new SelectList(Enum.GetValues(typeof(EquineElegance.Entities.HorseSize))),
			        "Selecteer een paardenmaat", new { @class = "form-control" })
	        </div>
        </div>
        <div class="form-group">
	        @Html.LabelFor(model => model.SaddlePadType, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownListFor(model => model.SaddlePadType,
			        new SelectList(Enum.GetValues(typeof(EquineElegance.Entities.BlanketType))),
			        "Selecteer een type dekje", new { @class = "form-control" })
	        </div>
        </div>


        <div>
	        <label for="Image" class="control-label">Upload Picture</label>
	        <input type="file" name="Image" accept=".jpg, .jpeg, .png" class="form-control" />
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
