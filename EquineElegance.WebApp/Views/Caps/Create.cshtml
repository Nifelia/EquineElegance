@using EquineElegance.Entities
@model EquineElegance.Entities.Cap

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>

<p>@ViewBag.Feedback</p>

@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>Cap</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", type = "number", step = "0.01", min = "0" } })
                @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Image, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Image, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
	        @Html.LabelFor(model => model.AmountInStock, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.EditorFor(model => model.AmountInStock, new { htmlAttributes = new { @class = "form-control", type = "number", min = "0" } })
		        @Html.ValidationMessageFor(model => model.AmountInStock, "", new { @class = "text-danger" })
	        </div>
        </div>
        
        @* manuele toevoeging van de property kleur (en eronder ook CapSize) zodat deze ook gekozen kunnen worden bij de create *@
        <div class="form-group">
	        @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownListFor(model => model.Color, 
			        Enum.GetValues(typeof(Color)).Cast<Color>().Select(c => new SelectListItem
			        {
				        Value = ((int)c).ToString(),
				        Text = c.ToString()
			        }), "Select Color", new { @class = "form-control" })
		        @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
	        </div>
        </div>
        
        <div class="form-group">
	        @Html.LabelFor(model => model.CapSize, htmlAttributes: new { @class = "control-label col-md-2" })
	        <div class="col-md-10">
		        @Html.DropDownListFor(model => model.CapSize, 
			        Enum.GetValues(typeof(CapSize)).Cast<CapSize>().Select(cs => new SelectListItem
			        {
				        Value = ((int)cs).ToString(),
				        Text = cs.ToString()
			        }), "Select Cap Size", new { @class = "form-control" })
		        @Html.ValidationMessageFor(model => model.CapSize, "", new { @class = "text-danger" })
	        </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
